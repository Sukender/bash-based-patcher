#!/bin/bash
# Creates an archive useable by diff/patch as a base directory.
# Archives are actually tar with an additionnal compression (LZMA2), but not directly "7z" or such, which may not be comparable by the delta tool (rdiff, xdelta3) the same way.
#
# Author: Sukender (Benoit Neil)
# Licence: WTFPL v2 (see COPYING.txt)
# To-do: make this script accept arguments, have an help & usage, etc.

# Dependencies, error codes, documentation: see "bbp_config.sh"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"		# Script dir
source "$DIR/bbp_config.sh" || exit 4

# --------------------------------------------------------------------------------
# Parameters parsing and usage

positionalOption() {
	if [ -z "${dir1:-}" ]; then
		dir1="$1"
	else
		echo "Unrecognized option: $1"
	fi
}

usage() {
	echo ""
	echo "$toolName"
	echo "Creates an archive useable by diff/patch as a base directory."
	echo "Output is located in the working directory, with a standardized name."
	echo "Can also extract those archives (and some others) using 'x' (as with tar)."
	echo
	echo "Syntax:"
	echo "  ar [options] directory"
	echo "  ar x [options] archive"
	echo
	echo "Options:"
	echo "  -h, --help"
	echo "      Displays this help text and exits."
	echo "  --man"
	echo "      Displays all documentation available and exits."
	echo "  --version"
	echo "      Displays a short (parsable) version information and exits."
	echo "  -v, --verbose"
	echo "      Adds a level of verbosity (more information). Default level = $defaultVerbosity."
	echo "  -q, --quiet"
	echo "      Removes a level of verbosity (less information). Default level = $defaultVerbosity."
	echo "      Please note that even level 0 is not absolutely quiet."
	echo "  -0 to -9"
	echo "      Sets the XZ compression level (default: 9)"
	echo "  -x (or simply x)"
	echo "      Extracts instead of archiving."
	echo "  --"
	echo "      Do not interpret any more arguments as options."
	echo
}

extract=0

while [ "$#" -gt 0 ]; do
case "$1" in
	-v|--verbose)
		shift; verbosity=$(( verbosity + 1 ));
		;;
	-q|--quiet)
		shift; verbosity=$(( verbosity - 1 ));
		;;
	-h|--help)
		shift; usage; exit 0;
		;;
	--man)
		shift; usage; displayDoc; exit 0;
		;;
	--version)
		shift; echo "$toolVersion"; exit 0;
		;;
	-[0-9])
		xzOpt "$1"; shift;
		;;
	x|-x)
		shift; extract=1
		;;
	--)
		shift;
		break;
		;;
	# an option argument, continue
	*)
		positionalOption "$1"
		shift;
		;;
esac
done

if [ ! -n "$dir1" ]; then
	usage
	exit 1
fi

# --------------------------------------------------------------------------------

if (( $extract == 0 )); then
	# Archiving

	if [ ! -d "$dir1" ]; then
		echo "'$dir1' isn't a directory."
		exit 1
	fi

	archive="$(basename "$dir1")$archiveSuffix"

	if (( $verbosity >= 2 )); then
		echo "$toolName"
		echo $separatorDisplay
		echo ""
		echo "Archiving '$dir1'"
		echo "Output archive file: $archive"
		echo "XZ options: $XZ_OPT"
	fi

	rm "$archive" 2> /dev/null || true
	if (( $verbosity >= 1 )); then
		size=$(getSize "$dir1")
		if (( $has_pv != 0 )); then
			$tarDir -f - --directory="$dir1" . | pv -N "Archive" -s $size | xz > "$archive"
		else
			$tarDir -Jf "$archive" --directory="$dir1" . --checkpoint=.100
			echo ""
		fi
	else
		$tarDir -Jf "$archive" --directory="$dir1" .
	fi
else
	# Extracting

	# Swap arguments (semantics)
	archive="$dir1"
	dir1="$(directoryNameFromArchive "$archive")"

	if (( $verbosity >= 2 )); then
		echo "$toolName"
		echo $separatorDisplay
		echo ""
		echo "Extracting '$archive'"
		echo "Output directory: $dir1"
	fi
	if [ ! -f "$archive" ]; then
		echo "'$archive' is not a valid file."
		exit 1
	fi
	if [ -d "$dir1" ]; then
		echo "'$dir1' already exists! Please remove or rename it, or extract somewhere else."
		exit 1
	fi

	mkdir "$dir1"

	# Note that compresison level and '-T0' (multithreading) in XZ_OPT are useless here (won't be taken into account).
	if (( $verbosity >= 1 )); then
		#if (( $has_pv != 0 )); then
		#	pv "$archive" | tar Jxf - --directory="$dir1"		# Sometimes fails! Don't know why!!
		#else
			tar xvf "$archive" --directory="$dir1"
		#fi
	else
		tar xf "$archive" --directory="$dir1"
	fi
fi
